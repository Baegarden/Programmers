# DFS & BFS - Level 2 : 타겟 넘버

answer = 0

def dfs(numbers, target, i, arr):
    global answer

    if i == len(numbers):
        numSum = 0
        for i in range(len(numbers)):
            numSum += numbers[i] * arr[i]
        if numSum == target:
            answer += 1
        return 

    arr1 = arr + [-1]
    arr2 = arr + [1]
    dfs(numbers, target, i+1, arr1)
    dfs(numbers, target, i+1, arr2)

def solution(numbers, target):
    dfs(numbers, target, 0, [])
    return answer
    
# 다른사람풀이(1)
from itertools import product
def solution(numbers, target):
    l = [(x, -x) for x in numbers]
    s = list(map(sum, product(*l)))
    return s.count(target)
    
# 다른사람풀이(2) WOW...
def solution(numbers, target):
    if not numbers and target == 0 :
        return 1
    elif not numbers:
        return 0
    else:
        return solution(numbers[1:], target-numbers[0]) + solution(numbers[1:], target+numbers[0])
